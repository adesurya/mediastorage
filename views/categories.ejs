<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Categories - SIJAGO+ AI</title>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    .categories-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
      margin-top: 2rem;
    }

    .category-card {
      background: var(--white);
      border-radius: var(--radius-lg);
      padding: 1.5rem;
      box-shadow: var(--shadow);
      transition: var(--transition);
      cursor: pointer;
    }

    .category-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }

    .category-icon {
      width: 60px;
      height: 60px;
      border-radius: var(--radius);
      background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      margin-bottom: 1rem;
    }

    .category-name {
      font-size: 1.125rem;
      font-weight: 700;
      color: var(--gray-900);
      margin-bottom: 0.5rem;
    }

    .category-description {
      font-size: 0.875rem;
      color: var(--gray-500);
      margin-bottom: 1rem;
      line-height: 1.5;
    }

    .category-stats {
      display: flex;
      gap: 1rem;
      padding-top: 1rem;
      border-top: 1px solid var(--gray-200);
    }

    .category-stat {
      font-size: 0.875rem;
      color: var(--gray-600);
    }

    .category-actions {
      display: flex;
      gap: 0.5rem;
      margin-top: 1rem;
    }
  </style>
</head>
<body>
  <%- include('partials/navbar', { user: user, currentPage: 'categories' }) %>

  <div class="container">
    <div class="page-header" style="display: flex; justify-content: space-between; align-items: center;">
      <div>
        <h1 class="page-title">Media Categories</h1>
        <p class="page-subtitle">Organize your media files into categories</p>
      </div>
      <button class="btn btn-primary btn-lg" onclick="openCreateModal()">
        <span>üìÅ</span>
        <span>New Category</span>
      </button>
    </div>

    <div id="message"></div>

    <% if (categories.length > 0) { %>
      <div class="categories-grid">
        <% categories.forEach(cat => { %>
          <div class="category-card">
            <div class="category-icon">üìÅ</div>
            <div class="category-name"><%= cat.name %></div>
            <% if (cat.description) { %>
              <div class="category-description"><%= cat.description %></div>
            <% } %>
            <div class="category-stats">
              <div class="category-stat">
                <strong><%= cat.media_count %></strong> files
              </div>
              <div class="category-stat">
                By <%= cat.username %>
              </div>
            </div>
            <div class="category-actions">
              <button class="btn btn-success btn-sm" style="flex: 1;" onclick="viewCategory(<%= cat.id %>)">
                üëÅÔ∏è View
              </button>
              <button class="btn btn-primary btn-sm" onclick='openEditModal(<%= JSON.stringify(cat) %>)'>
                ‚úèÔ∏è Edit
              </button>
              <button class="btn btn-danger btn-sm" onclick="deleteCategory(<%= cat.id %>)">
                üóëÔ∏è
              </button>
            </div>
          </div>
        <% }); %>
      </div>
    <% } else { %>
      <div class="card" style="margin-top: 2rem;">
        <div style="text-align: center; padding: 3rem; color: var(--gray-400);">
          <div style="font-size: 4rem; margin-bottom: 1rem;">üìÅ</div>
          <p style="font-size: 1.125rem; margin-bottom: 0.5rem; color: var(--gray-600);">No categories yet</p>
          <p style="font-size: 0.875rem;">Create your first category to organize your media files</p>
        </div>
      </div>
    <% } %>
  </div>

  <!-- Modal Create Category -->
  <div id="createModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title">Create New Category</h2>
      </div>
      <form id="createForm">
        <div class="form-group">
          <label class="form-label" for="create_name">Category Name</label>
          <input type="text" id="create_name" name="name" class="form-control" placeholder="e.g., Wedding Videos" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="create_description">Description (Optional)</label>
          <textarea id="create_description" name="description" class="form-control" rows="3" placeholder="Brief description of this category"></textarea>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" onclick="closeCreateModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Create Category</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Modal Edit Category -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title">Edit Category</h2>
      </div>
      <form id="editForm">
        <input type="hidden" id="edit_id" name="id">
        <div class="form-group">
          <label class="form-label" for="edit_name">Category Name</label>
          <input type="text" id="edit_name" name="name" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="edit_description">Description (Optional)</label>
          <textarea id="edit_description" name="description" class="form-control" rows="3"></textarea>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Update Category</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    function showMessage(message, type) {
      const messageDiv = document.getElementById('message');
      messageDiv.innerHTML = `<div class="alert alert-${type}"><span class="alert-icon">${type === 'success' ? '‚úÖ' : '‚ùå'}</span><div class="alert-content">${message}</div></div>`;
      setTimeout(() => {
        messageDiv.innerHTML = '';
      }, 3000);
    }

    function openCreateModal() {
      document.getElementById('createModal').classList.add('active');
    }

    function closeCreateModal() {
      document.getElementById('createModal').classList.remove('active');
      document.getElementById('createForm').reset();
    }

    function openEditModal(category) {
      document.getElementById('edit_id').value = category.id;
      document.getElementById('edit_name').value = category.name;
      document.getElementById('edit_description').value = category.description || '';
      document.getElementById('editModal').classList.add('active');
    }

    function closeEditModal() {
      document.getElementById('editModal').classList.remove('active');
      document.getElementById('editForm').reset();
    }

    function viewCategory(id) {
      window.location.href = '/media?category=' + id;
    }

    document.getElementById('createForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);
      
      try {
        const response = await fetch('/categories/api', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
          showMessage('Category created successfully!', 'success');
          closeCreateModal();
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(result.message, 'danger');
        }
      } catch (error) {
        showMessage('Failed to create category!', 'danger');
      }
    });

    document.getElementById('editForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);
      const id = data.id;
      delete data.id;
      
      try {
        const response = await fetch(`/categories/api/${id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
          showMessage('Category updated successfully!', 'success');
          closeEditModal();
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(result.message, 'danger');
        }
      } catch (error) {
        showMessage('Failed to update category!', 'danger');
      }
    });

    async function deleteCategory(id) {
      if (!confirm('Are you sure you want to delete this category? Files in this category will not be deleted.')) return;
      
      try {
        const response = await fetch(`/categories/api/${id}`, {
          method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
          showMessage('Category deleted successfully!', 'success');
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(result.message, 'danger');
        }
      } catch (error) {
        showMessage('Failed to delete category!', 'danger');
      }
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
      const createModal = document.getElementById('createModal');
      const editModal = document.getElementById('editModal');
      if (event.target === createModal) {
        closeCreateModal();
      }
      if (event.target === editModal) {
        closeEditModal();
      }
    }
  </script>
</body>
</html>