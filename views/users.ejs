<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Management - SIJAGO+ AI</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <%- include('partials/navbar', { user: user, currentPage: 'users' }) %>

  <div class="container">
    <div class="page-header" style="display: flex; justify-content: space-between; align-items: center;">
      <div>
        <h1 class="page-title">User Management</h1>
        <p class="page-subtitle">Manage user accounts and permissions</p>
      </div>
      <button class="btn btn-primary btn-lg" onclick="openCreateModal()">
        <span>‚ûï</span>
        <span>Add New User</span>
      </button>
    </div>

    <div id="message"></div>

    <div class="table-container">
      <table class="table">
        <thead>
          <tr>
            <th>ID</th>
            <th>Username</th>
            <th>Email</th>
            <th>Role</th>
            <th>Created At</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach(u => { %>
            <tr>
              <td><%= u.id %></td>
              <td style="font-weight: 600;"><%= u.username %></td>
              <td><%= u.email %></td>
              <td>
                <span class="badge badge-<%= u.role %>"><%= u.role %></span>
              </td>
              <td><%= new Date(u.created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></td>
              <td>
                <div style="display: flex; gap: 0.5rem;">
                  <button class="btn btn-success btn-sm" onclick='openEditModal(<%= JSON.stringify(u) %>)'>
                    ‚úèÔ∏è Edit
                  </button>
                  <button class="btn btn-danger btn-sm" onclick="deleteUser(<%= u.id %>)">
                    üóëÔ∏è Delete
                  </button>
                </div>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Modal Create User -->
  <div id="createModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title">Create New User</h2>
      </div>
      <form id="createForm">
        <div class="form-group">
          <label class="form-label" for="create_username">Username</label>
          <input type="text" id="create_username" name="username" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="create_email">Email</label>
          <input type="email" id="create_email" name="email" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="create_password">Password</label>
          <input type="password" id="create_password" name="password" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="create_role">Role</label>
          <select id="create_role" name="role" class="form-select" required>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" onclick="closeCreateModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Create User</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Modal Edit User -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title">Edit User</h2>
      </div>
      <form id="editForm">
        <input type="hidden" id="edit_id" name="id">
        <div class="form-group">
          <label class="form-label" for="edit_username">Username</label>
          <input type="text" id="edit_username" name="username" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="edit_email">Email</label>
          <input type="email" id="edit_email" name="email" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="edit_password">Password</label>
          <input type="password" id="edit_password" name="password" class="form-control" placeholder="Leave empty to keep current password">
        </div>
        <div class="form-group">
          <label class="form-label" for="edit_role">Role</label>
          <select id="edit_role" name="role" class="form-select" required>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Update User</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    function showMessage(message, type) {
      const messageDiv = document.getElementById('message');
      messageDiv.innerHTML = `<div class="alert alert-${type}"><span class="alert-icon">${type === 'success' ? '‚úÖ' : '‚ùå'}</span><div class="alert-content">${message}</div></div>`;
      setTimeout(() => {
        messageDiv.innerHTML = '';
      }, 3000);
    }

    function openCreateModal() {
      document.getElementById('createModal').classList.add('active');
    }

    function closeCreateModal() {
      document.getElementById('createModal').classList.remove('active');
      document.getElementById('createForm').reset();
    }

    function openEditModal(user) {
      document.getElementById('edit_id').value = user.id;
      document.getElementById('edit_username').value = user.username;
      document.getElementById('edit_email').value = user.email;
      document.getElementById('edit_role').value = user.role;
      document.getElementById('editModal').classList.add('active');
    }

    function closeEditModal() {
      document.getElementById('editModal').classList.remove('active');
      document.getElementById('editForm').reset();
    }

    document.getElementById('createForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);
      
      try {
        const response = await fetch('/api/users/create', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
          showMessage('User created successfully!', 'success');
          closeCreateModal();
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(result.message, 'danger');
        }
      } catch (error) {
        showMessage('Failed to create user!', 'danger');
      }
    });

    document.getElementById('editForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData);
      const id = data.id;
      delete data.id;
      
      try {
        const response = await fetch(`/api/users/update/${id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
          showMessage('User updated successfully!', 'success');
          closeEditModal();
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(result.message, 'danger');
        }
      } catch (error) {
        showMessage('Failed to update user!', 'danger');
      }
    });

    async function deleteUser(id) {
      if (!confirm('Are you sure you want to delete this user?')) return;
      
      try {
        const response = await fetch(`/api/users/delete/${id}`, {
          method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
          showMessage('User deleted successfully!', 'success');
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(result.message, 'danger');
        }
      } catch (error) {
        showMessage('Failed to delete user!', 'danger');
      }
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
      const createModal = document.getElementById('createModal');
      const editModal = document.getElementById('editModal');
      if (event.target === createModal) {
        closeCreateModal();
      }
      if (event.target === editModal) {
        closeEditModal();
      }
    }
  </script>
</body>
</html>